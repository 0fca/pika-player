// <auto-generated />
using System;
using Claudia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Claudia.Migrations.Lectures
{
    [DbContext(typeof(LecturesContext))]
    [Migration("20200229153429_LectureContext migration")]
    partial class LectureContextmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Claudia.Data.Comment", b =>
                {
                    b.Property<string>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnName("video_id");

                    b.HasKey("CommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Claudia.Data.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CourseName")
                        .HasColumnName("course_name");

                    b.Property<string>("LecturerId")
                        .HasColumnName("lecturer_id");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Claudia.Data.Expiry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date");

                    b.HasKey("Id");

                    b.ToTable("Expiries");
                });

            modelBuilder.Entity("Claudia.Data.Lecture", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CourseId")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("display_name");

                    b.Property<bool>("IsLocked")
                        .HasColumnName("is_locked");

                    b.Property<string>("LecturerId")
                        .IsRequired()
                        .HasColumnName("lecturer_id");

                    b.Property<string>("MimeType")
                        .HasColumnName("mime_type");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnName("thumbnail");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnName("video_path");

                    b.HasKey("Id");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("Claudia.Data.SubComment", b =>
                {
                    b.Property<int>("SubCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CommentId")
                        .HasColumnName("comment_id");

                    b.Property<string>("SubContent")
                        .IsRequired()
                        .HasColumnName("subcontent");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id");

                    b.HasKey("SubCommentId");

                    b.HasIndex("CommentId");

                    b.ToTable("SubComments");
                });

            modelBuilder.Entity("Claudia.Data.SubComment", b =>
                {
                    b.HasOne("Claudia.Data.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId");
                });
#pragma warning restore 612, 618
        }
    }
}
